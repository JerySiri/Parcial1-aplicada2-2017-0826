
@using Parcial1_aplicada2_2017_0826.Models;
@using Parcial1_aplicada2_2017_0826.BLL;

@page "/Productos"
@page "/Productos/{ProductosId:int}"

@inject IToastService toast;
    
<EditForm Model="producto" OnValidSubmit="Guardar">
    
    <DataAnnotationsValidator />

    <div class="card">

        <div class="card-header">
            
            <h3>Registro de Productos</h3>

        </div>

        <div class="card-body">

            @*Producto Id y Boton Buscar*@
            <div class="form-row">

                <div class="col">
                    <div class="form-group">

                        <label class="form-label">ID</label>

                        <div class="input-group">
                            <InputNumber @bind-Value="producto.ProductoId" class="form-control col-5" />

                            <div class="input-group-append">
                                <button type="button" class="btn btn-info" @onclick="Buscar">
                                    <i class="oi oi-magnifying-glass"></i>
                                    Buscar
                                </button>
                            </div>

                        </div>
                    </div>

                </div>

            </div>

            @*Descripcion*@
            <div class="form-group">

                <label>Descripción</label>
                <InputText @bind-Value=" producto.Descripcion" class="form-control col-6" />
                <ValidationMessage For="@(() => producto.Descripcion)" />

            </div>

            @*Existencia*@
            <div class="form-group">

                <label>Existencia</label>
                <InputNumber @bind-Value=" producto.Existencia" class="form-control col-6" />

            </div>

            @*Costo*@
            <div class="form-group">

                <label>Costo</label>
                <InputNumber @bind-Value=" producto.Costos" class="form-control col-6" />

            </div>

            @*Valor Inventario*@
            <div class="form-group">

                <label>Valor Inventario</label>
                <InputNumber readonly @bind-Value=" producto.ValorInventario" class="form-control col-6" />

            </div>

        </div>

        @*Botones*@
        <div class="card-footer">
            
            <div class="form-group text-center" display: inline-block>
                
                @*Boton Nuevo*@
                <button type="button" class="btn btn-lg btn-primary" @onclick =" Nuevo" >
                    <i class="oi oi-magnifying-glass"></i>
                    Nuevo
                </button>

                @*Boton Guardar*@
                <button type="submit" class="btn btn-lg btn-success">
                    <i class="oi oi-account-login" style="transform:rotate(90deg)"></i>
                    Guardar
                </button>

                @*Boton Eliminar*@
                <button type="button" class="btn btn-lg btn-danger" @onclick =" Eliminar">
                    <i class="oi oi-trash mr-2"></i>
                    Eliminar
                </button>

            </div>

        </div>


    </div>
        

</EditForm>


@code {

    [Parameter]
    public int ProductosId { get; set; }

    private Productos producto = new Productos();

    protected override void OnInitialized()
    {
        Nuevo();

        Buscar();
    }

    public void Nuevo()
    {
        producto = new Productos();
    }

    private void Buscar()
    {
        if (producto.ProductoId > 0)
        {
            var encontrado = ProductosBLL.Buscar(producto.ProductoId);

            if (encontrado != null)
            {
                this.producto = encontrado;
            }
            else
            {
                toast.ShowWarning("No se encontro el producto");
            }
        }

    }

    public void Guardar()
    {
        bool fueGuardado;

        CalcularValorInventario();

        fueGuardado = ProductosBLL.Guardar(producto);

        if (fueGuardado)
        {
            Nuevo();
            toast.ShowSuccess("Fue Guardado Correctamente");
        }
        else
        {
            toast.ShowError("No fue guardado Correctamente");
        }
    }

    public void Eliminar()
    {
        bool fueEliminado;

        fueEliminado = ProductosBLL.Eliminar(producto.ProductoId);

        if (fueEliminado)
        {
            Nuevo();
            toast.ShowSuccess("Fue Eliminado Correctamente");
        }
        else
        {
            toast.ShowError("No fue Eliminado Correctamente");
        }

    }

    private void CalcularValorInventario()
    {
        producto.ValorInventario = producto.Costos * producto.Existencia;
    }


}
